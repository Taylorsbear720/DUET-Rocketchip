#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# rocketchip.tcl: Tcl script for re-creating project 'myproject-sidewinder'
#
# Generated by Vivado on Thu Jun 27 17:51:29 CST 2024
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (rocketchip.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "myproject-sidewinder"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "rocketchip.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xczu19eg-ffvc1760-2-i

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "platform.board_id" -value "none" -objects $obj
set_property -name "pr_flow" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "11" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "11" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "11" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "11" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "11" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "11" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "11" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../rocket-chip/axi.vh"] \
 [file normalize "${origin_dir}/../rocket-chip/build/FPGATop.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/addr_mapper.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/pardcore/rtl/rocket/plusarg_reader.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/system_top.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/interruption_logic_v1reg.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/gen_break.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/encore_interface.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/delayed_reg_update.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/dut_data_generator.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/peripheral_syn_reg.v"] \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/rtl/difftest_v1.v"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder/myproject-sidewinder.srcs/sources_1/new/axi_write.v" ]\
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder/myproject-sidewinder.srcs/sources_1/new/DataChange.v" ]\
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder/myproject-sidewinder.srcs/sources_1/bd/pardcore/pardcore.bd" ]\
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder/myproject-sidewinder.srcs/sources_1/bd/zynq_soc/zynq_soc.bd" ]\
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder/myproject-sidewinder.srcs/sources_1/new/interrupt_gen.v" ]\
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder/myproject-sidewinder.srcs/sources_1/new/Data_Pack.v" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../rocket-chip/axi.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
set file "pardcore/pardcore.bd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "zynq_soc/zynq_soc.bd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "registered_with_manager" -value "1" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "system_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder/myproject-sidewinder.srcs/sources_1/ip/vio_0/vio_0.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "vio_0/vio_0.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../rocket-chip/fpga/board/sidewinder/constr/constr.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../rocket-chip/fpga/board/sidewinder/constr/constr.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../rocket-chip/fpga/board/sidewinder/build/myproject-sidewinder/myproject-sidewinder.srcs/constrs_1/new/pblock.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "new/pblock.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *new/pblock.xdc]" -objects $obj
set_property -name "target_part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "target_ucf" -value "[get_files *new/pblock.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "system_top" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'RoCCAccelerator' partition definition
create_partition_def -name RoCCAccelerator -module RoCCAccelerator
set obj [get_partition_defs RoCCAccelerator]
set_property -name "name" -value "RoCCAccelerator" -objects $obj
set_property -name "use_blackbox_stub" -value "1" -objects $obj

# Create 'aesHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name aesHLS -partition_def $partitionDef
set obj [get_reconfig_modules aesHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_addkey.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_addkey1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_addkey3.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_cpkey.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_ecb1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_ecb2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_mix.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_sub.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_sub2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes_expandEncKey_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_aes_expandEncKey_1_sbox_ROM_AUTO_1R.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aes256_encrypt_ecb_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/aesHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/aes/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules aesHLS] $files

# Set 'aesHLS' fileset file properties for remote files
# None

# Set 'aesHLS' fileset file properties for local files
# None

# Create 'bfsbulkHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name bfsbulkHLS -partition_def $partitionDef
set obj [get_reconfig_modules bfsbulkHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/bulk/bfs.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/bulk/bfs_bfs_Pipeline_loop_neighbors.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/bulk/bfs_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/bulk/bfsbulkHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/bulk/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules bfsbulkHLS] $files

# Set 'bfsbulkHLS' fileset file properties for remote files
# None

# Set 'bfsbulkHLS' fileset file properties for local files
# None

# Create 'bfsqueueHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name bfsqueueHLS -partition_def $partitionDef
set obj [get_reconfig_modules bfsqueueHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/queue/bfs.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/queue/bfs_bfs_Pipeline_loop_neighbors.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/queue/bfs_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/queue/bfs_queue_RAM_AUTO_1R1W.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/queue/bfsqueueHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/bfs/queue/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules bfsqueueHLS] $files

# Set 'bfsqueueHLS' fileset file properties for remote files
# None

# Set 'bfsqueueHLS' fileset file properties for local files
# None

# Create 'greybox' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name greybox -partition_def $partitionDef
set obj [get_reconfig_modules greybox]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/greybox/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules greybox] $files

# Set 'greybox' fileset file properties for remote files
# None

# Set 'greybox' fileset file properties for local files
# None

# Create 'kmpHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name kmpHLS -partition_def $partitionDef
set obj [get_reconfig_modules kmpHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/kmp/kmp.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/kmp/kmpHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/kmp/kmp_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/kmp/kmp_kmp_Pipeline_c2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/kmp/kmp_kmp_Pipeline_k2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/kmp/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules kmpHLS] $files

# Set 'kmpHLS' fileset file properties for remote files
# None

# Set 'kmpHLS' fileset file properties for local files
# None

# Create 'nwHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name nwHLS -partition_def $partitionDef
set obj [get_reconfig_modules nwHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/needwun.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/needwun_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/needwun_needwun_Pipeline_fill_in.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/needwun_needwun_Pipeline_init_col.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/needwun_needwun_Pipeline_init_row.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/needwun_needwun_Pipeline_pad_a.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/needwun_needwun_Pipeline_pad_b.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/needwun_needwun_Pipeline_trace.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/nwHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/nw/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules nwHLS] $files

# Set 'nwHLS' fileset file properties for remote files
# None

# Set 'nwHLS' fileset file properties for local files
# None

# Create 'sigmoidHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name sigmoidHLS -partition_def $partitionDef
set obj [get_reconfig_modules sigmoidHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sigmoid/sigmoidHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sigmoid/sigmoid_fixed.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sigmoid/sigmoid_fixed_d_f_n_ln2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sigmoid/sigmoid_fixed_f_n_ln2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sigmoid/sigmoid_fixed_mul_10ns_32s_32_1_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sigmoid/sigmoid_fixed_mul_mul_22s_12ns_22_4_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sigmoid/sigmoid_fixed_n_ln2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sigmoid/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules sigmoidHLS] $files

# Set 'sigmoidHLS' fileset file properties for remote files
# None

# Set 'sigmoidHLS' fileset file properties for local files
# None

# Create 'sortmergeHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name sortmergeHLS -partition_def $partitionDef
set obj [get_reconfig_modules sortmergeHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/ms_mergesort.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/ms_mergesort_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/ms_mergesort_merge_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/ms_mergesort_merge_1_Pipeline_merge_label1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/ms_mergesort_merge_1_Pipeline_merge_label2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/ms_mergesort_merge_1_Pipeline_merge_label3.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/ms_mergesort_merge_1_temp_RAM_AUTO_1R1W.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/ms_mergesort_ms_mergesort_Pipeline_mergesort_label2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/sortmergeHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/merge/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules sortmergeHLS] $files

# Set 'sortmergeHLS' fileset file properties for remote files
# None

# Set 'sortmergeHLS' fileset file properties for local files
# None

# Create 'sortradixHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name sortradixHLS -partition_def $partitionDef
set obj [get_reconfig_modules sortradixHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/sortradixHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_ss_sort_Pipeline_hist_1_hist_2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_ss_sort_Pipeline_hist_1_hist_21.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_ss_sort_Pipeline_init_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_ss_sort_Pipeline_last_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_ss_sort_Pipeline_local_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_ss_sort_Pipeline_sum_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_ss_sort_Pipeline_update_1_update_2.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/ss_sort_ss_sort_Pipeline_update_1_update_22.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/sort/radix/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules sortradixHLS] $files

# Set 'sortradixHLS' fileset file properties for remote files
# None

# Set 'sortradixHLS' fileset file properties for local files
# None

# Create 'stencil2dHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name stencil2dHLS -partition_def $partitionDef
set_property default_rm stencil2dHLS $partitionDef
set obj [get_reconfig_modules stencil2dHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil2d/stencil.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil2d/stencil2dHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil2d/stencil_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil2d/stencil_mul_32s_32s_32_1_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil2d/stencil_stencil_Pipeline_stencil_label3_stencil_label4.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil2d/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules stencil2dHLS] $files

# Set 'stencil2dHLS' fileset file properties for remote files
# None

# Set 'stencil2dHLS' fileset file properties for local files
# None

# Create 'stencil3dHLS' reconfigurable module
set partitionDef [get_partition_defs RoCCAccelerator]
create_reconfig_module -name stencil3dHLS -partition_def $partitionDef
set obj [get_reconfig_modules stencil3dHLS]
set_property -name "module_name" -value "RoCCAccelerator" -objects $obj

set files [list \
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/TrueDualPortRAM.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/stencil3d.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/stencil3dHLS.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/stencil3d_flow_control_loop_pipe_sequential_init.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/stencil3d_mul_32s_32s_32_1_1.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/stencil3d_stencil3d_Pipeline_col_bound_height_col_bound_row.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/stencil3d_stencil3d_Pipeline_height_bound_col_height_bound_row.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/stencil3d_stencil3d_Pipeline_loop_height.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/stencil3d_stencil3d_Pipeline_row_bound_height_row_bound_col.v"]"\
 "[file normalize "$origin_dir/../rocket-chip/fpga/pardcore/rtl/rocket/stencil3d/RoCCAccelerator.v"]"\
]
add_files -norecurse -of_objects [get_reconfig_modules stencil3dHLS] $files

# Set 'stencil3dHLS' fileset file properties for remote files
# None

# Set 'stencil3dHLS' fileset file properties for local files
# None

# Create 'aesHLS' pr configurations
create_pr_configuration -name aesHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:aesHLS ]
set obj [get_pr_configurations aesHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:aesHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'bfsbulkHLS' pr configurations
create_pr_configuration -name bfsbulkHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:bfsbulkHLS ]
set obj [get_pr_configurations bfsbulkHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:bfsbulkHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'bfsqueueHLS' pr configurations
create_pr_configuration -name bfsqueueHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:bfsqueueHLS ]
set obj [get_pr_configurations bfsqueueHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:bfsqueueHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'config_1' pr configurations
create_pr_configuration -name config_1 -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:bfsqueueHLS ] -greyboxes [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator ]
set obj [get_pr_configurations config_1]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "greybox_cells" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'greybox' pr configurations
create_pr_configuration -name greybox -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:greybox ]
set obj [get_pr_configurations greybox]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:greybox" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'kmpHLS' pr configurations
create_pr_configuration -name kmpHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:kmpHLS ]
set obj [get_pr_configurations kmpHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:kmpHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'nwHLS' pr configurations
create_pr_configuration -name nwHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:nwHLS ]
set obj [get_pr_configurations nwHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:nwHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'sigmoidHLS' pr configurations
create_pr_configuration -name sigmoidHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:sigmoidHLS ]
set obj [get_pr_configurations sigmoidHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:sigmoidHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'sortmergeHLS' pr configurations
create_pr_configuration -name sortmergeHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:sortmergeHLS ]
set obj [get_pr_configurations sortmergeHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:sortmergeHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'sortradixHLS' pr configurations
create_pr_configuration -name sortradixHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:sortradixHLS ]
set obj [get_pr_configurations sortradixHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:sortradixHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'stencil2dHLS' pr configurations
create_pr_configuration -name stencil2dHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:stencil2dHLS ]
set obj [get_pr_configurations stencil2dHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:stencil2dHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'stencil3dHLS' pr configurations
create_pr_configuration -name stencil3dHLS -partitions [list ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:stencil3dHLS ]
set obj [get_pr_configurations stencil3dHLS]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "ExampleRocketSystem_0/tile_prci_domain/tile_reset_domain/tile/RoCCAccelerator:stencil3dHLS" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj
set_property -name "steps.synth_design.args.flatten_hierarchy" -value "none" -objects $obj

# Create 'stencil2dHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet stencil2dHLS_synth_1] ""]} {
    create_run -name stencil2dHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset stencil2dHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs stencil2dHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs stencil2dHLS_synth_1]
}
set obj [get_runs stencil2dHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'stencil2dHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_synth_1] stencil2dHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name stencil2dHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs stencil2dHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_synth_1] stencil2dHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs stencil2dHLS_synth_1]
set_property -name "constrset" -value "stencil2dHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'sigmoidHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet sigmoidHLS_synth_1] ""]} {
    create_run -name sigmoidHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset sigmoidHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs sigmoidHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs sigmoidHLS_synth_1]
}
set obj [get_runs sigmoidHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'sigmoidHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_synth_1] sigmoidHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name sigmoidHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs sigmoidHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_synth_1] sigmoidHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs sigmoidHLS_synth_1]
set_property -name "constrset" -value "sigmoidHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'aesHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet aesHLS_synth_1] ""]} {
    create_run -name aesHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset aesHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs aesHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs aesHLS_synth_1]
}
set obj [get_runs aesHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'aesHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_synth_1] aesHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name aesHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs aesHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_synth_1] aesHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs aesHLS_synth_1]
set_property -name "constrset" -value "aesHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'sortmergeHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet sortmergeHLS_synth_1] ""]} {
    create_run -name sortmergeHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset sortmergeHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs sortmergeHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs sortmergeHLS_synth_1]
}
set obj [get_runs sortmergeHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'sortmergeHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_synth_1] sortmergeHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name sortmergeHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs sortmergeHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_synth_1] sortmergeHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs sortmergeHLS_synth_1]
set_property -name "constrset" -value "sortmergeHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'stencil3dHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet stencil3dHLS_synth_1] ""]} {
    create_run -name stencil3dHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset stencil3dHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs stencil3dHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs stencil3dHLS_synth_1]
}
set obj [get_runs stencil3dHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'stencil3dHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_synth_1] stencil3dHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name stencil3dHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs stencil3dHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_synth_1] stencil3dHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs stencil3dHLS_synth_1]
set_property -name "constrset" -value "stencil3dHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'nwHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet nwHLS_synth_1] ""]} {
    create_run -name nwHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset nwHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs nwHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs nwHLS_synth_1]
}
set obj [get_runs nwHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'nwHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_synth_1] nwHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name nwHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs nwHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_synth_1] nwHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs nwHLS_synth_1]
set_property -name "constrset" -value "nwHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'kmpHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet kmpHLS_synth_1] ""]} {
    create_run -name kmpHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset kmpHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs kmpHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs kmpHLS_synth_1]
}
set obj [get_runs kmpHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'kmpHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_synth_1] kmpHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name kmpHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs kmpHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_synth_1] kmpHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs kmpHLS_synth_1]
set_property -name "constrset" -value "kmpHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'bfsbulkHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet bfsbulkHLS_synth_1] ""]} {
    create_run -name bfsbulkHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset bfsbulkHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs bfsbulkHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs bfsbulkHLS_synth_1]
}
set obj [get_runs bfsbulkHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'bfsbulkHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_synth_1] bfsbulkHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs bfsbulkHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_synth_1] bfsbulkHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs bfsbulkHLS_synth_1]
set_property -name "constrset" -value "bfsbulkHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'bfsqueueHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet bfsqueueHLS_synth_1] ""]} {
    create_run -name bfsqueueHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset bfsqueueHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs bfsqueueHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs bfsqueueHLS_synth_1]
}
set obj [get_runs bfsqueueHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'bfsqueueHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_synth_1] bfsqueueHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs bfsqueueHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_synth_1] bfsqueueHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs bfsqueueHLS_synth_1]
set_property -name "constrset" -value "bfsqueueHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'sortradixHLS_synth_1' run (if not found)
if {[string equal [get_runs -quiet sortradixHLS_synth_1] ""]} {
    create_run -name sortradixHLS_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset sortradixHLS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs sortradixHLS_synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs sortradixHLS_synth_1]
}
set obj [get_runs sortradixHLS_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'sortradixHLS_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_synth_1] sortradixHLS_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name sortradixHLS_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs sortradixHLS_synth_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_synth_1] sortradixHLS_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs sortradixHLS_synth_1]
set_property -name "constrset" -value "sortradixHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'greybox_synth_1' run (if not found)
if {[string equal [get_runs -quiet greybox_synth_1] ""]} {
    create_run -name greybox_synth_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset greybox
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs greybox_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs greybox_synth_1]
}
set obj [get_runs greybox_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'greybox_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_synth_1] greybox_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name greybox_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs greybox_synth_1
}
set obj [get_report_configs -of_objects [get_runs greybox_synth_1] greybox_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs greybox_synth_1]
set_property -name "constrset" -value "greybox" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set_property pr_configuration stencil2dHLS [get_runs impl_1]
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'stencil2dHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet stencil2dHLS_impl_1] ""]} {
    create_run -name stencil2dHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset stencil2dHLS -parent_run stencil2dHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs stencil2dHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs stencil2dHLS_impl_1]
}
set obj [get_runs stencil2dHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'stencil2dHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil2dHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil2dHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil2dHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'stencil2dHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'stencil2dHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'stencil2dHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil2dHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil2dHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil2dHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil2dHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'stencil2dHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'stencil2dHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'stencil2dHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name stencil2dHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs stencil2dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil2dHLS_impl_1] stencil2dHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs stencil2dHLS_impl_1]
set_property -name "constrset" -value "stencil2dHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'sigmoidHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet sigmoidHLS_impl_1] ""]} {
    create_run -name sigmoidHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset sigmoidHLS -parent_run sigmoidHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs sigmoidHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs sigmoidHLS_impl_1]
}
set obj [get_runs sigmoidHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'sigmoidHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sigmoidHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sigmoidHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sigmoidHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'sigmoidHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'sigmoidHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'sigmoidHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sigmoidHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sigmoidHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sigmoidHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sigmoidHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'sigmoidHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'sigmoidHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'sigmoidHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name sigmoidHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs sigmoidHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sigmoidHLS_impl_1] sigmoidHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs sigmoidHLS_impl_1]
set_property -name "constrset" -value "sigmoidHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'aesHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet aesHLS_impl_1] ""]} {
    create_run -name aesHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset aesHLS -parent_run aesHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs aesHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs aesHLS_impl_1]
}
set obj [get_runs aesHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'aesHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'aesHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'aesHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'aesHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'aesHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'aesHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name aesHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'aesHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'aesHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'aesHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'aesHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'aesHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'aesHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'aesHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'aesHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name aesHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs aesHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs aesHLS_impl_1] aesHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs aesHLS_impl_1]
set_property -name "constrset" -value "aesHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'sortmergeHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet sortmergeHLS_impl_1] ""]} {
    create_run -name sortmergeHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset sortmergeHLS -parent_run sortmergeHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs sortmergeHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs sortmergeHLS_impl_1]
}
set obj [get_runs sortmergeHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'sortmergeHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortmergeHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortmergeHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortmergeHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'sortmergeHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'sortmergeHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'sortmergeHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortmergeHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortmergeHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortmergeHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortmergeHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'sortmergeHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'sortmergeHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'sortmergeHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name sortmergeHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs sortmergeHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortmergeHLS_impl_1] sortmergeHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs sortmergeHLS_impl_1]
set_property -name "constrset" -value "sortmergeHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'stencil3dHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet stencil3dHLS_impl_1] ""]} {
    create_run -name stencil3dHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset stencil3dHLS -parent_run stencil3dHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs stencil3dHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs stencil3dHLS_impl_1]
}
set obj [get_runs stencil3dHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'stencil3dHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil3dHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil3dHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil3dHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'stencil3dHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'stencil3dHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'stencil3dHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil3dHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil3dHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil3dHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'stencil3dHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'stencil3dHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'stencil3dHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'stencil3dHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name stencil3dHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs stencil3dHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs stencil3dHLS_impl_1] stencil3dHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs stencil3dHLS_impl_1]
set_property -name "constrset" -value "stencil3dHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'nwHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet nwHLS_impl_1] ""]} {
    create_run -name nwHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset nwHLS -parent_run nwHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs nwHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs nwHLS_impl_1]
}
set obj [get_runs nwHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'nwHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'nwHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'nwHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'nwHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'nwHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'nwHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name nwHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'nwHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'nwHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'nwHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'nwHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'nwHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'nwHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'nwHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'nwHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name nwHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs nwHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs nwHLS_impl_1] nwHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs nwHLS_impl_1]
set_property -name "constrset" -value "nwHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'kmpHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet kmpHLS_impl_1] ""]} {
    create_run -name kmpHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset kmpHLS -parent_run kmpHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs kmpHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs kmpHLS_impl_1]
}
set obj [get_runs kmpHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'kmpHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'kmpHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'kmpHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'kmpHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'kmpHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'kmpHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'kmpHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'kmpHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'kmpHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'kmpHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'kmpHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'kmpHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'kmpHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'kmpHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name kmpHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs kmpHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs kmpHLS_impl_1] kmpHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs kmpHLS_impl_1]
set_property -name "constrset" -value "kmpHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'bfsbulkHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet bfsbulkHLS_impl_1] ""]} {
    create_run -name bfsbulkHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset bfsbulkHLS -parent_run bfsbulkHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs bfsbulkHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs bfsbulkHLS_impl_1]
}
set obj [get_runs bfsbulkHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'bfsbulkHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'bfsbulkHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'bfsbulkHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name bfsbulkHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs bfsbulkHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsbulkHLS_impl_1] bfsbulkHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs bfsbulkHLS_impl_1]
set_property -name "constrset" -value "bfsbulkHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'bfsqueueHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet bfsqueueHLS_impl_1] ""]} {
    create_run -name bfsqueueHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset bfsqueueHLS -parent_run bfsqueueHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs bfsqueueHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs bfsqueueHLS_impl_1]
}
set obj [get_runs bfsqueueHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'bfsqueueHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'bfsqueueHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'bfsqueueHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name bfsqueueHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs bfsqueueHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs bfsqueueHLS_impl_1] bfsqueueHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs bfsqueueHLS_impl_1]
set_property -name "constrset" -value "bfsqueueHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_2' run (if not found)
if {[string equal [get_runs -quiet impl_2] ""]} {
      create_run -name impl_2 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config aesHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_2]
  set_property flow "Vivado Implementation 2019" [get_runs impl_2]
}
set obj [get_runs impl_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_2]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_3' run (if not found)
if {[string equal [get_runs -quiet impl_3] ""]} {
      create_run -name impl_3 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config bfsbulkHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_3]
  set_property flow "Vivado Implementation 2019" [get_runs impl_3]
}
set obj [get_runs impl_3]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_3_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_3_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_3_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_io_0] "" ] } {
  create_report_config -report_name impl_3_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_3_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_3_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_3_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_3_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_3_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_3_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_3_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_3_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_3_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_3_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_3_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_power_0] "" ] } {
  create_report_config -report_name impl_3_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_3_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_3_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_3_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_3_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_3_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_3_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_3_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_3_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_3_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_3_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_3
}
set obj [get_report_configs -of_objects [get_runs impl_3] impl_3_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_3]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_4' run (if not found)
if {[string equal [get_runs -quiet impl_4] ""]} {
      create_run -name impl_4 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config bfsqueueHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_4]
  set_property flow "Vivado Implementation 2019" [get_runs impl_4]
}
set obj [get_runs impl_4]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_4_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_4_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_4_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_io_0] "" ] } {
  create_report_config -report_name impl_4_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_4_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_4_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_4_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_4_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_4_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_4_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_4_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_4_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_4_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_4_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_4_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_power_0] "" ] } {
  create_report_config -report_name impl_4_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_4_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_4_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_4_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_4_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_4_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_4_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_4_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_4_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_4_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_4_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_4
}
set obj [get_report_configs -of_objects [get_runs impl_4] impl_4_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_4]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_5' run (if not found)
if {[string equal [get_runs -quiet impl_5] ""]} {
      create_run -name impl_5 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config kmpHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_5]
  set_property flow "Vivado Implementation 2019" [get_runs impl_5]
}
set obj [get_runs impl_5]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_5_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_5_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_5_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_io_0] "" ] } {
  create_report_config -report_name impl_5_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_5_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_5_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_5_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_5_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_5_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_5_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_5_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_5_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_5_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_5_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_5_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_power_0] "" ] } {
  create_report_config -report_name impl_5_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_5_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_5_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_5_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_5_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_5_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_5_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_5_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_5_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_5_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_5]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_6' run (if not found)
if {[string equal [get_runs -quiet impl_6] ""]} {
      create_run -name impl_6 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config nwHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_6]
  set_property flow "Vivado Implementation 2019" [get_runs impl_6]
}
set obj [get_runs impl_6]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_6_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_6_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_6_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_io_0] "" ] } {
  create_report_config -report_name impl_6_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_6_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_6_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_6_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_6_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_6_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_6_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_6_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_6_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_6_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_6_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_6_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_power_0] "" ] } {
  create_report_config -report_name impl_6_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_6_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_6_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_6_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_6_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_6_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_6_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_6_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_6]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_7' run (if not found)
if {[string equal [get_runs -quiet impl_7] ""]} {
      create_run -name impl_7 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config sigmoidHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_7]
  set_property flow "Vivado Implementation 2019" [get_runs impl_7]
}
set obj [get_runs impl_7]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_7_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_7_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_7_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_io_0] "" ] } {
  create_report_config -report_name impl_7_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_7_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_7_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_7_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_7_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_7_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_7_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_7_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_7_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_7_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_7_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_7_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_power_0] "" ] } {
  create_report_config -report_name impl_7_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_7_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_7_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_7_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_7_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_7_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_7_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_7_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_7]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_8' run (if not found)
if {[string equal [get_runs -quiet impl_8] ""]} {
      create_run -name impl_8 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config sortmergeHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_8]
  set_property flow "Vivado Implementation 2019" [get_runs impl_8]
}
set obj [get_runs impl_8]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_8_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_8_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_8_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_io_0] "" ] } {
  create_report_config -report_name impl_8_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_8_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_8_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_8_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_8_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_8_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_8_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_8_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_8_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_8_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_8_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_8_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_power_0] "" ] } {
  create_report_config -report_name impl_8_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_8_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_8_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_8_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_8_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_8_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_8_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_8_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_8]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_9' run (if not found)
if {[string equal [get_runs -quiet impl_9] ""]} {
      create_run -name impl_9 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config stencil3dHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_9]
  set_property flow "Vivado Implementation 2019" [get_runs impl_9]
}
set obj [get_runs impl_9]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_9_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_9_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_9_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_io_0] "" ] } {
  create_report_config -report_name impl_9_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_9_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_9_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_9_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_9_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_9_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_9_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_9_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_9_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_9_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_9_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_9_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_power_0] "" ] } {
  create_report_config -report_name impl_9_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_9_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_9_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_9_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_9_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_9_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_9_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_9_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_9]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'sortradixHLS_impl_1' run (if not found)
if {[string equal [get_runs -quiet sortradixHLS_impl_1] ""]} {
    create_run -name sortradixHLS_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset sortradixHLS -parent_run sortradixHLS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs sortradixHLS_impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs sortradixHLS_impl_1]
}
set obj [get_runs sortradixHLS_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'sortradixHLS_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortradixHLS_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortradixHLS_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortradixHLS_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'sortradixHLS_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'sortradixHLS_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'sortradixHLS_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortradixHLS_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortradixHLS_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortradixHLS_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'sortradixHLS_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'sortradixHLS_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'sortradixHLS_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'sortradixHLS_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name sortradixHLS_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs sortradixHLS_impl_1
}
set obj [get_report_configs -of_objects [get_runs sortradixHLS_impl_1] sortradixHLS_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs sortradixHLS_impl_1]
set_property -name "constrset" -value "sortradixHLS" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_10' run (if not found)
if {[string equal [get_runs -quiet impl_10] ""]} {
      create_run -name impl_10 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config sortradixHLS -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_10]
  set_property flow "Vivado Implementation 2019" [get_runs impl_10]
}
set obj [get_runs impl_10]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_10_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_10_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_10_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_10_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_10_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_10_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_10_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_10_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_10_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_io_0] "" ] } {
  create_report_config -report_name impl_10_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_10_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_10_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_10_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_10_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_10_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_10_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_10_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_10_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_10_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_10_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_10_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_10_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_10_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_10_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_10_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_10_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_10_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_10_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_10_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_power_0] "" ] } {
  create_report_config -report_name impl_10_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_10_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_10_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_10_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_10_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_10_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_10_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_10_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_10_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_10_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_10_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_10_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_10_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_10_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_10] impl_10_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_10_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_10
}
set obj [get_report_configs -of_objects [get_runs impl_10] impl_10_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_10]
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'greybox_impl_1' run (if not found)
if {[string equal [get_runs -quiet greybox_impl_1] ""]} {
    create_run -name greybox_impl_1 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset greybox -parent_run greybox_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs greybox_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs greybox_impl_1]
}
set obj [get_runs greybox_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'greybox_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name greybox_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'greybox_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name greybox_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name greybox_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'greybox_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name greybox_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'greybox_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name greybox_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name greybox_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name greybox_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'greybox_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name greybox_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'greybox_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name greybox_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'greybox_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name greybox_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'greybox_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name greybox_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'greybox_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name greybox_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'greybox_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name greybox_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name greybox_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name greybox_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name greybox_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name greybox_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'greybox_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name greybox_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name greybox_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'greybox_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name greybox_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'greybox_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name greybox_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'greybox_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name greybox_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs greybox_impl_1
}
set obj [get_report_configs -of_objects [get_runs greybox_impl_1] greybox_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs greybox_impl_1]
set_property -name "constrset" -value "greybox" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_11' run (if not found)
if {[string equal [get_runs -quiet impl_11] ""]} {
    create_run -name impl_11 -part xczu19eg-ffvc1760-2-i -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_11]
  set_property flow "Vivado Implementation 2020" [get_runs impl_11]
}
set_property pr_configuration config_1 [get_runs impl_11]
set obj [get_runs impl_11]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_11_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_11_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_11_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_11_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_11_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_11_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_11_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_11_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_11_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_io_0] "" ] } {
  create_report_config -report_name impl_11_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_11_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_11_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_11_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_11_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_11_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_11_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_11_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_11_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_11_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_11_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_11_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_11_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_11_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_11_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_11_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_11_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_11_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_11_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_11_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_power_0] "" ] } {
  create_report_config -report_name impl_11_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_11_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_11_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_11_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_11_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_11_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_11_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_11_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_11_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_11_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_11_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_11_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_11_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_11_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_11] impl_11_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_11_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_11
}
set obj [get_report_configs -of_objects [get_runs impl_11] impl_11_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_11]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xczu19eg-ffvc1760-2-i" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_11]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
